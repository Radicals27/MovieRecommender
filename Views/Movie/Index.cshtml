@model MovieRecommender.Models.MovieFilterViewModel
@using TMDbLib.Objects.Search

@{
    ViewData["Title"] = "Movie Recommender";
}

<div class="header-padding" style="padding-top: 50px;"></div>

<div class="container">
    <h1 class="mb-4">Movie Recommender</h1>
    
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Filter Movies</h5>
                    <form method="post">
                        <div class="mb-3">
                            <label asp-for="StartYear" class="form-label">Start Year</label>
                            <input asp-for="StartYear" class="form-control" type="number" min="1900" max="2024" />
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="EndYear" class="form-label">End Year</label>
                            <input asp-for="EndYear" class="form-control" type="number" min="1900" max="2024" />
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="MinimumRating" class="form-label">Minimum Rating (1-10)</label>
                            <input asp-for="MinimumRating" class="form-control" type="number" min="0" max="10" step="0.1" />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Genres</label>
                            <div class="row">
                                @foreach (var genre in MovieFilterViewModel.AllGenres)
                                {
                                    <div class="col-6">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="SelectedGenres" value="@genre" 
                                                   @(Model.SelectedGenres.Contains(genre) ? "checked" : "") />
                                            <label class="form-check-label">@genre</label>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">Find Movies</button>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="col-md-8">
            @if (Model.Movies.Any())
            {
                @if (Model.Movies.Count() >= 2)
                {
                    <div class="mb-3 text-center">
                        <button type="button" class="btn btn-secondary mx-auto" onclick="shuffleMovies()">
                            Shuffle Results
                        </button>
                    </div>
                }
                <div class="row row-cols-1 row-cols-md-2 g-4" id="movieContainer">
                    @foreach (var movie in Model.Movies)
                    {
                        <div class="col">
                            <div class="card">
                                @if (!string.IsNullOrEmpty(movie.PosterPath))
                                {
                                    <img src="https://image.tmdb.org/t/p/w342@(movie.PosterPath)" 
                                         srcset="https://image.tmdb.org/t/p/w185@(movie.PosterPath) 185w,
                                                 https://image.tmdb.org/t/p/w342@(movie.PosterPath) 342w,
                                                 https://image.tmdb.org/t/p/w500@(movie.PosterPath) 500w"
                                         sizes="(max-width: 768px) 100vw, 342px"
                                         class="card-img-top" 
                                         alt="@movie.Title poster">
                                }
                                <div class="card-body">
                                    <h5 class="card-title">@movie.Title</h5>
                                    <p class="card-text">
                                        <small class="text-muted">
                                            Released: @(movie.ReleaseDate?.Year > 0 ? movie.ReleaseDate?.ToString("yyyy") : "N/A") | Rating: @(movie.VoteAverage > 0 ? movie.VoteAverage.ToString("F1") : "N/A")
                                        </small>
                                    </p>
                                    <p class="card-text">@movie.Overview</p>
                                    <p class="card-text movie-genres">
                                        <small class="text-muted">
                                            Genres: @string.Join(", ", movie.GenreIds?.Select(id => {
                                                switch (id)
                                                {
                                                    case 28: return "Action";
                                                    case 12: return "Adventure";
                                                    case 16: return "Animation";
                                                    case 35: return "Comedy";
                                                    case 80: return "Crime";
                                                    case 99: return "Documentary";
                                                    case 18: return "Drama";
                                                    case 10751: return "Family";
                                                    case 14: return "Fantasy";
                                                    case 36: return "History";
                                                    case 27: return "Horror";
                                                    case 10402: return "Music";
                                                    case 9648: return "Mystery";
                                                    case 10749: return "Romance";
                                                    case 878: return "Science Fiction";
                                                    case 53: return "Thriller";
                                                    case 10752: return "War";
                                                    case 37: return "Western";
                                                    default: return null;
                                                }
                                            }).Where(g => g != null) ?? Array.Empty<string>())
                                        </small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    Use the filters to discover movies that match your interests!
                </div>
            }
        </div>
    </div>
</div> 

<script>
function shuffleMovies() {
    const container = document.getElementById('movieContainer');
    const movies = Array.from(container.children);
    
    for (let i = movies.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        container.appendChild(movies[j]);
    }
}
</script> 